{"version":3,"sources":["pages/landing.tsx","pages/aboutMe.tsx","pages/resume.tsx","pages/projects.tsx","components/main.tsx","components/Main layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["landing","className","about","resume","projects","Main","exact","path","component","MainLayout","id","title","scroll","to","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4PAUeA,MARf,WACE,OACE,yBAAKC,UAAU,kBACb,iDCKSC,MARf,WACE,OACE,6BACE,+CC6ESC,MAhFf,WACE,OACE,6BACE,2CACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,+BCnESC,MARf,WACE,OACE,6BACI,+CCaOC,MAXf,WACI,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,UAAUC,UAAWL,IACjC,kBAAC,IAAD,CAAOI,KAAK,YAAYC,UAAWJ,M,OC0B5BK,MAlCf,WACE,OACE,kBAAC,SAAD,KACE,kBAAC,SAAD,CACEC,GAAG,UACHT,UAAU,UACVU,MAAM,yCACNC,QAAM,GAEN,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,IAAIZ,UAAU,QAAvB,QACA,kBAAC,IAAD,CAAMY,GAAG,WAAWZ,UAAU,QAA9B,YACA,kBAAC,IAAD,CAAMY,GAAG,UAAUZ,UAAU,QAA7B,UACA,kBAAC,IAAD,CAAMY,GAAG,YAAYZ,UAAU,QAA/B,cAGJ,kBAAC,SAAD,KACE,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAMY,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,cAGJ,kBAAC,UAAD,CAASZ,UAAU,WACjB,kBAAC,EAAD,SCfOa,MAVf,WACE,OACE,6BACE,kBAAC,SAAD,KACE,kBAAC,EAAD,SCGYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SD4HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.95ae391a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction landing() {\r\n  return (\r\n    <div className=\"landingWrapper\">\r\n      <h1>Hello, welcome!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default landing;","import React from \"react\";\r\n\r\nfunction about() {\r\n  return (\r\n    <div>\r\n      <h1>About me Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default about;\r\n","import React from 'react';\r\n\r\nfunction resume() {\r\n  return (\r\n    <div>\r\n      <h1>Resume Page</h1>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default resume;","import React from 'react';\r\n\r\nfunction projects() {\r\n  return (\r\n    <div>\r\n        <h1>Projects Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default projects;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport landing from '../pages/landing';\r\nimport about from '../pages/aboutMe';\r\nimport resume from '../pages/resume';\r\nimport projects from '../pages/projects';\r\n\r\nfunction Main (){\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={landing} />\r\n        <Route path=\"/aboutme\" component={about} />\r\n        <Route path=\"/resume\" component={resume} />\r\n        <Route path=\"/projects\" component={projects} />\r\n      </Switch>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\r\nimport Main from './main';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction MainLayout() {\r\n  return (\r\n    <Layout>\r\n      <Header\r\n        id=\"hamMenu\"\r\n        className=\"hamMenu\"\r\n        title=\"Juan Sebastián Rodríguez Galarza\"\r\n        scroll\r\n      >\r\n        <Navigation>\r\n          <Link to=\"/\" className=\"link\" >Home</Link>\r\n          <Link to=\"/aboutme\" className=\"link\" >About Me</Link>\r\n          <Link to=\"/resume\" className=\"link\" >Resume</Link>\r\n          <Link to=\"/projects\" className=\"link\" >Projects</Link>\r\n        </Navigation>\r\n      </Header>\r\n      <Drawer>\r\n        <Navigation>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/aboutme\">About Me</Link>\r\n          <Link to=\"/resume\">Resume</Link>\r\n          <Link to=\"/projects\">Projects</Link>\r\n        </Navigation>\r\n      </Drawer>\r\n      <Content className=\"content\">\r\n        <Main />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default MainLayout;","import React from 'react';\nimport './App.css';\nimport MainLayout from './components/Main layout';\nimport { Layout, Content } from 'react-mdl';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <MainLayout />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}